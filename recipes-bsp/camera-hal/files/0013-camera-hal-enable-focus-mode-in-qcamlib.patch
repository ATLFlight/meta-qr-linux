From 6f3b57f43a4160de14a8b31b03d9cd295b4c87e9 Mon Sep 17 00:00:00 2001
From: Punit Soni <punits@codeaurora.org>
Date: Fri, 24 Jul 2015 17:06:57 -0700
Subject: [PATCH 13/16] camera-hal: enable focus mode in qcamlib

Change-Id: I2de8a6e9e49c53dd08619d401d3e1151b4a5fff5
---
 QCamera2/stack/mm-camera-test/inc/mm_qcamera_app.h |  1 -
 qcamlib/inc/qcamlib.h                              |  7 +++++
 qcamlib/src/qcamlib.c                              | 36 +++++++++++++---------
 3 files changed, 29 insertions(+), 15 deletions(-)

diff --git a/QCamera2/stack/mm-camera-test/inc/mm_qcamera_app.h b/QCamera2/stack/mm-camera-test/inc/mm_qcamera_app.h
index 7ab87c4..4a1877c 100644
--- a/QCamera2/stack/mm-camera-test/inc/mm_qcamera_app.h
+++ b/QCamera2/stack/mm-camera-test/inc/mm_qcamera_app.h
@@ -251,7 +251,6 @@ typedef struct {
     uint32_t video_width, video_height;
     uint32_t preview_width, preview_height;
     cam_format_t preview_fmt, video_fmt;
-
     //Reprocess params&stream
     int8_t enable_reproc;
     int32_t reproc_sharpness;
diff --git a/qcamlib/inc/qcamlib.h b/qcamlib/inc/qcamlib.h
index 4456915..67cdf48 100644
--- a/qcamlib/inc/qcamlib.h
+++ b/qcamlib/inc/qcamlib.h
@@ -124,6 +124,12 @@ typedef struct _qcamlib_video_buf_cb_data_t {
  */
 typedef void (*qcamlib_video_buf_info_cb) (qcamlib_video_buf_cb_data_t cb_data);
 
+
+typedef enum {
+    QCAM_FOCUS_FIXED,
+    QCAM_FOCUS_AUTO,
+} qcamlib_focus_mode_t;
+
 /**
  *  @brief qcamlib configuration
  */
@@ -131,6 +137,7 @@ typedef struct _qcamlib_config_t {
     qcamlib_stream_dim_t preview_dim;
     qcamlib_stream_dim_t video_dim;
     qcamlib_stream_dim_t snapshot_dim;
+    qcamlib_focus_mode_t af_mode;
 } qcamlib_config_t;
 
 /**
diff --git a/qcamlib/src/qcamlib.c b/qcamlib/src/qcamlib.c
index 6fdde09..81b45fd 100644
--- a/qcamlib/src/qcamlib.c
+++ b/qcamlib/src/qcamlib.c
@@ -43,6 +43,7 @@ typedef struct _qcamlib_obj {
     bool video_on;
     void *cb_userdata;
     bool video_preview;
+    cam_focus_mode_type af_mode;
     qcamlib_video_buf_info_cb v_buf_info_cb;
 };
 
@@ -81,6 +82,8 @@ qcamlib_t qcamlib_create()
     h->test_obj.video_height = DEFAULT_VIDEO_HEIGHT;
     h->test_obj.preview_width = DEFAULT_PREVIEW_WIDTH;
     h->test_obj.preview_height = DEFAULT_PREVIEW_HEIGHT;
+    /* set focus mode to fixed by default */
+    h->af_mode = CAM_FOCUS_MODE_FIXED;
 #if 0
     h->test_obj.snapshot_width = DEFAULT_SNAPSHOT_WIDTH;
     h->test_obj.snapshot_height = DEFAULT_SNAPSHOT_HEIGHT;
@@ -199,16 +202,7 @@ int qcamlib_start_video(qcamlib_t h)
         QCAM_ERR("setFPSRange() rc=%d", rc);
         return -1;
     }
-// Temp: disabling CAF
-#if 0
-    /* set AF mode to continuous video */
-    cam_focus_mode_type af_mode = CAM_FOCUS_MODE_CONTINOUS_VIDEO;
-    rc = setFocusMode(&h->test_obj, af_mode);
-    if (rc != MM_CAMERA_OK) {
-        QCAM_ERR("setFocusMode() rc=%d", rc);
-        return -1;
-    }
-#endif
+
     if (h->preview_on == false) {
         rc = qcamlib_start_preview(h);
         if (rc != 0) {
@@ -392,13 +386,27 @@ int qcamlib_configure(qcamlib_t h, qcamlib_config_t config)
     h->test_obj.preview_height = config.preview_dim.height;
     h->test_obj.video_width = config.video_dim.width;
     h->test_obj.video_height = config.video_dim.height;
-#if 0
-    h->test_obj.snapshot_width = config.snapshot_dim.width;
-    h->test_obj.snapshot_height = config.snapshot_dim.height;
-#endif
+
     QCAM_DBG("preview %dx%d, video %dx%d",
 			h->test_obj.preview_width, h->test_obj.preview_height,
 			h->test_obj.video_width, h->test_obj.video_height);
+    /* set focus mode */
+    switch (config.af_mode) {
+    case QCAM_FOCUS_FIXED:
+        h->af_mode = CAM_FOCUS_MODE_FIXED;
+        break;
+    case QCAM_FOCUS_AUTO:
+        h->af_mode = CAM_FOCUS_MODE_CONTINOUS_VIDEO;
+        break;
+    default:
+        QCAM_ERR("Invalid focus mode");
+        return -1;
+    }
+    int rc = setFocusMode(&h->test_obj, h->af_mode);
+    if (rc != MM_CAMERA_OK) {
+        QCAM_ERR("setFocusMode() rc=%d", rc);
+        return -1;
+    }
     return 0;
 }
 
-- 
1.9.1

