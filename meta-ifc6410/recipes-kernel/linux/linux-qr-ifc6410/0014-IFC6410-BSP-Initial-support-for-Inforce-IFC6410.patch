From 395201390764b15eb16baf2c9b48045bf9d38135 Mon Sep 17 00:00:00 2001
From: Suman Kumar <suman@inforcecomputing.com>
Date: Tue, 25 Jun 2013 12:46:55 -0700
Subject: [PATCH 14/44] IFC6410: BSP: Initial support for Inforce IFC6410

Change-Id: I13cf9ccfc53112508e61be450104b639fea51367
Signed-off-by: Suman Kumar <suman@inforcecomputing.com>
---
 arch/arm/mach-msm/Kconfig              |    7 +++++++
 arch/arm/mach-msm/Makefile             |    1 +
 arch/arm/mach-msm/board-8064-gpiomux.c |    4 ++--
 arch/arm/mach-msm/board-8064-pmic.c    |    8 +++++---
 arch/arm/mach-msm/board-8064-storage.c |    6 +++++-
 arch/arm/mach-msm/board-8064.c         |   20 +++++++++++++++++---
 6 files changed, 37 insertions(+), 9 deletions(-)

diff --git a/arch/arm/mach-msm/Kconfig b/arch/arm/mach-msm/Kconfig
index c9b786c..7c7a9c5 100644
--- a/arch/arm/mach-msm/Kconfig
+++ b/arch/arm/mach-msm/Kconfig
@@ -867,6 +867,13 @@ config MACH_APQ8064_CDP
 	help
 	  Support for the Qualcomm APQ8064 CDP device.
 
+config MACH_APQ8064_IFC6410
+        depends on ARCH_APQ8064
+        default y
+        bool "APQ8064 IFC6410 DEVELOPMENT PLATFORM"
+        help
+          Support for the Inforce IFC6410 Development Platform.
+
 config MACH_APQ8064_MTP
 	depends on ARCH_APQ8064
 	bool "APQ8064 MTP"
diff --git a/arch/arm/mach-msm/Makefile b/arch/arm/mach-msm/Makefile
index bff4160..d78c1d4 100644
--- a/arch/arm/mach-msm/Makefile
+++ b/arch/arm/mach-msm/Makefile
@@ -288,6 +288,7 @@ obj-$(CONFIG_MACH_MSM8930_MTP) += board-8930-all.o board-8930-regulator-pm8038.o
 obj-$(CONFIG_MACH_MSM8930_FLUID) += board-8930-all.o board-8930-regulator-pm8038.o board-8930-regulator-pm8917.o
 obj-$(CONFIG_PM8921_BMS) += bms-batterydata.o bms-batterydata-desay.o
 obj-$(CONFIG_MACH_APQ8064_CDP) += board-8064-all.o board-8064-regulator.o
+obj-$(CONFIG_MACH_APQ8064_IFC6410) += board-8064-all.o board-8064-regulator.o
 obj-$(CONFIG_MACH_APQ8064_MTP) += board-8064-all.o board-8064-regulator.o
 obj-$(CONFIG_MACH_APQ8064_LIQUID) += board-8064-all.o board-8064-regulator.o
 obj-$(CONFIG_MACH_MPQ8064_HRD) += board-8064-all.o board-8064-regulator.o board-8064-bt.o
diff --git a/arch/arm/mach-msm/board-8064-gpiomux.c b/arch/arm/mach-msm/board-8064-gpiomux.c
index a08f45c..4e38989 100644
--- a/arch/arm/mach-msm/board-8064-gpiomux.c
+++ b/arch/arm/mach-msm/board-8064-gpiomux.c
@@ -1568,8 +1568,8 @@ void __init apq8064_init_gpiomux(void)
 				ARRAY_SIZE(apq8064_hsic_configs));
 #endif
 
-	if (machine_is_apq8064_cdp() || machine_is_apq8064_liquid())
-		msm_gpiomux_install(apq8064_mxt_configs,
+    if (machine_is_apq8064_cdp() || machine_is_apq8064_liquid() || machine_is_apq8064_ifc6410())
+        msm_gpiomux_install(apq8064_mxt_configs,
 			ARRAY_SIZE(apq8064_mxt_configs));
 
 	msm_gpiomux_install(apq8064_hdmi_configs,
diff --git a/arch/arm/mach-msm/board-8064-pmic.c b/arch/arm/mach-msm/board-8064-pmic.c
index 11aaade..5fe3404 100644
--- a/arch/arm/mach-msm/board-8064-pmic.c
+++ b/arch/arm/mach-msm/board-8064-pmic.c
@@ -209,8 +209,8 @@ void __init apq8064_pm8xxx_gpio_mpp_init(void)
 	else
 		apq8064_configure_gpios(pm8917_gpios, ARRAY_SIZE(pm8917_gpios));
 
-	if (machine_is_apq8064_cdp() || machine_is_apq8064_liquid()) {
-		if (socinfo_get_pmic_model() != PMIC_MODEL_PM8917)
+    if (machine_is_apq8064_cdp() || machine_is_apq8064_liquid() || machine_is_apq8064_ifc6410()) {
+        if (socinfo_get_pmic_model() != PMIC_MODEL_PM8917)
 			apq8064_configure_gpios(pm8921_cdp_kp_gpios,
 					ARRAY_SIZE(pm8921_cdp_kp_gpios));
 		else
@@ -507,5 +507,7 @@ void __init apq8064_init_pmic(void)
 		apq8064_pm8921_bms_pdata.battery_type = BATT_DESAY;
 	} else if (machine_is_apq8064_cdp()) {
 		apq8064_pm8921_chg_pdata.has_dc_supply = true;
-	}
+	} else if (machine_is_apq8064_ifc6410()) {
+        apq8064_pm8921_chg_pdata.has_dc_supply = true;
+    }
 }
diff --git a/arch/arm/mach-msm/board-8064-storage.c b/arch/arm/mach-msm/board-8064-storage.c
index c81a637..3b40943 100644
--- a/arch/arm/mach-msm/board-8064-storage.c
+++ b/arch/arm/mach-msm/board-8064-storage.c
@@ -342,6 +342,10 @@ void __init apq8064_init_mmc(void)
 			apq8064_sdc3_pdata->wpswitch_gpio = 0;
 			apq8064_sdc3_pdata->is_wpswitch_active_low = false;
 		}
+        if (!machine_is_apq8064_ifc6410()) {
+            apq8064_sdc3_pdata->wpswitch_gpio = 0;
+            apq8064_sdc3_pdata->is_wpswitch_active_low = false;
+        }
 		if (machine_is_mpq8064_cdp() || machine_is_mpq8064_hrd() ||
 			machine_is_mpq8064_dtv()) {
 			int rc;
@@ -368,7 +372,7 @@ void __init apq8064_init_mmc(void)
 				apq8064_sdc3_pdata->status_irq = 0;
 			}
 		}
-		if (machine_is_apq8064_cdp()) {
+		if (machine_is_apq8064_cdp() || machine_is_apq8064_ifc6410()) {
 			int i;
 
 			for (i = 0;
diff --git a/arch/arm/mach-msm/board-8064.c b/arch/arm/mach-msm/board-8064.c
index e56e17d..a369ff3 100644
--- a/arch/arm/mach-msm/board-8064.c
+++ b/arch/arm/mach-msm/board-8064.c
@@ -3215,6 +3215,8 @@ static void __init register_i2c_devices(void)
 	/* Build the matching 'supported_machs' bitmask */
 	if (machine_is_apq8064_cdp())
 		mach_mask = I2C_SURF;
+    else if (machine_is_apq8064_ifc6410())
+        mach_mask = I2C_SURF;
 	else if (machine_is_apq8064_mtp())
 		mach_mask = I2C_FFA;
 	else if (machine_is_apq8064_liquid())
@@ -3453,8 +3455,8 @@ static void __init apq8064_cdp_init(void)
 		apq8064_bt_power_init();
 #endif
 
-	if (machine_is_apq8064_cdp() || machine_is_apq8064_liquid())
-		platform_device_register(&cdp_kp_pdev);
+    if (machine_is_apq8064_cdp() || machine_is_apq8064_liquid() || machine_is_apq8064_ifc6410())
+        platform_device_register(&cdp_kp_pdev);
 
 	if (machine_is_apq8064_mtp())
 		platform_device_register(&mtp_kp_pdev);
@@ -3466,7 +3468,7 @@ static void __init apq8064_cdp_init(void)
 		platform_device_register(&mpq_keypad_device);
 	}
 
-	if (machine_is_apq8064_cdp() || machine_is_mpq8064_hrd()) {
+	if (machine_is_apq8064_cdp() || machine_is_mpq8064_hrd() || machine_is_apq8064_ifc6410()) {
 		int ret;
 		struct pm8xxx_mpp_config_data sata_pwr_cfg = {
 			.type = PM8XXX_MPP_TYPE_D_OUTPUT,
@@ -3496,6 +3498,18 @@ MACHINE_START(APQ8064_CDP, "QCT APQ8064 CDP")
 	.restart = msm_restart,
 MACHINE_END
 
+MACHINE_START(APQ8064_IFC6410, "QCT APQ8064 IFC6410")
+        .map_io = apq8064_map_io,
+        .reserve = apq8064_reserve,
+        .init_irq = apq8064_init_irq,
+        .handle_irq = gic_handle_irq,
+        .timer = &msm_timer,
+        .init_machine = apq8064_cdp_init,
+        .init_early = apq8064_allocate_memory_regions,
+        .init_very_early = apq8064_early_reserve,
+        .restart = msm_restart,
+MACHINE_END
+
 MACHINE_START(APQ8064_MTP, "QCT APQ8064 MTP")
 	.map_io = apq8064_map_io,
 	.reserve = apq8064_reserve,
-- 
1.7.9.5

