From 4d7caf3ec97d7ab1dbbae4dfb8191f202af5af39 Mon Sep 17 00:00:00 2001
From: Kaustubh Gondkar <kgondkar@codeaurora.org>
Date: Thu, 10 Apr 2014 23:41:27 -0700
Subject: [PATCH] HSUART configuration

---
 arch/arm/mach-msm/board-8064-gpiomux.c | 24 +++++++++++++++++
 arch/arm/mach-msm/board-8064.c         | 32 ++++++++++++++++++++++-
 arch/arm/mach-msm/clock-8960.c         |  8 ++++++
 arch/arm/mach-msm/devices-8064.c       | 48 +++++++++++++++++++++++++++++++++-
 arch/arm/mach-msm/devices.h            |  1 +
 arch/arm/mach-msm/include/mach/dma.h   |  7 +++++
 6 files changed, 118 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-msm/board-8064-gpiomux.c b/arch/arm/mach-msm/board-8064-gpiomux.c
index 9df289c8..3aaf6a6 100644
--- a/arch/arm/mach-msm/board-8064-gpiomux.c
+++ b/arch/arm/mach-msm/board-8064-gpiomux.c
@@ -700,6 +700,30 @@ static struct msm_gpiomux_config apq8064_som_gsbi_configs[] __initdata = {
 		},
 	},
 	{
+		.gpio      = 18,		/* GSBI1 UART TX */
+		.settings = {
+			[GPIOMUX_SUSPENDED] = &gsbi1_uart_config,
+		},
+	},
+	{
+		.gpio      = 19,		/* GSBI1 UART RX */
+		.settings = {
+			[GPIOMUX_SUSPENDED] = &gsbi1_uart_config,
+		},
+	},
+	{
+		.gpio      = 20,		/* GSBI1 UART CTS */
+		.settings = {
+			[GPIOMUX_SUSPENDED] = &gsbi1_uart_config,
+		},
+	},
+	{
+		.gpio      = 21,		/* GSBI1 UART RFR */
+		.settings = {
+			[GPIOMUX_SUSPENDED] = &gsbi1_uart_config,
+		},
+	},
+	{
 		.gpio      = APQ8064_SOM_GSBI7_SPI_MOSI,
 		.settings = {
 			[GPIOMUX_SUSPENDED] = &som_gpio_spi2_config,
diff --git a/arch/arm/mach-msm/board-8064.c b/arch/arm/mach-msm/board-8064.c
index 2e35f97..42f5895 100644
--- a/arch/arm/mach-msm/board-8064.c
+++ b/arch/arm/mach-msm/board-8064.c
@@ -2561,7 +2561,6 @@ static struct platform_device *cdp_devices[] __initdata = {
 #ifdef CONFIG_MACH_APQ8064_SOM
 	&apq8064_device_uart_gsbi6,
 #else
-	&apq8064_device_uart_gsbi1,
 	&apq8064_device_uart_gsbi7,
 #endif
 	&msm_device_sps_apq8064,
@@ -3273,6 +3272,18 @@ static struct msm_serial_hs_platform_data apq8064_uartdm_gsbi4_pdata = {
 static struct msm_serial_hs_platform_data apq8064_uartdm_gsbi4_pdata;
 #endif
 
+#ifdef CONFIG_SERIAL_MSM_HS
+static struct msm_serial_hs_platform_data apq8064_uartdm_gsbi1_pdata = {
+	.config_gpio	= 4,
+	.uart_tx_gpio	= 18,
+	.uart_rx_gpio	= 19,
+	.uart_cts_gpio	= 20,
+	.uart_rfr_gpio	= 21,
+};
+#else
+static struct msm_serial_hs_platform_data apq8064_uartdm_gsbi1_pdata;
+#endif
+
 static void __init apq8064ab_update_retention_spm(void)
 {
 	int i;
@@ -3421,11 +3432,13 @@ static void __init apq8064_common_init(void)
 			platform_device_register(&mdm_8064_device);
 		}
 	}
+	
 	if(!machine_is_apq8064_som()) {
 		platform_device_register(&apq8064_slim_ctrl);
 		slim_register_board_info(apq8064_slim_devices,
 			ARRAY_SIZE(apq8064_slim_devices));
 	}
+
 	if (!PLATFORM_IS_MPQ8064()) {
 		apq8064_init_dsps();
 		platform_device_register(&msm_8960_riva);
@@ -3457,6 +3470,23 @@ static void __init apq8064_cdp_init(void)
 		ethernet_init();
 		msm_rotator_set_split_iommu_domain();
 		platform_add_devices(cdp_devices, ARRAY_SIZE(cdp_devices));
+		
+		if(machine_is_apq8064_som()) {
+			#ifdef CONFIG_SERIAL_MSM_HS
+			/* HSUART */
+			/* TBD: gpio line for irq */
+			apq8064_uartdm_gsbi1_pdata.wakeup_irq = gpio_to_irq(10);
+			apq8064_device_uartdm_gsbi1.dev.platform_data =
+					&apq8064_uartdm_gsbi1_pdata;
+			platform_device_register(&apq8064_device_uartdm_gsbi1);
+			#else
+			platform_device_register(&apq8064_device_uart_gsbi1);
+			#endif
+		}
+		else {
+			platform_device_register(&apq8064_device_uart_gsbi1);
+		}
+
 		/* SOM: No SPI devices connected*/
 		if(!machine_is_apq8064_som())
 		spi_register_board_info(spi_board_info,
diff --git a/arch/arm/mach-msm/clock-8960.c b/arch/arm/mach-msm/clock-8960.c
index c194d7e..09a2669 100755
--- a/arch/arm/mach-msm/clock-8960.c
+++ b/arch/arm/mach-msm/clock-8960.c
@@ -5300,9 +5300,13 @@ static struct clk_lookup msm_clocks_8064[] = {
 	CLK_LOOKUP("core_clk",		gp2_clk.c,		""),
 #ifdef CONFIG_MACH_LGE
 	CLK_LOOKUP("core_clk",		gsbi1_uart_clk.c,	""),
+#elif CONFIG_MACH_APQ8064_SOM
+#if CONFIG_SERIAL_MSM_HS
+	CLK_LOOKUP("core_clk",		gsbi1_uart_clk.c, "msm_serial_hs.0"),
 #else
 	CLK_LOOKUP("core_clk",		gsbi1_uart_clk.c, "msm_serial_hsl.1"),
 #endif
+#endif
 	CLK_LOOKUP("core_clk",		gsbi2_uart_clk.c,	""),
 	CLK_LOOKUP("core_clk",		gsbi3_uart_clk.c,	""),
 #ifdef CONFIG_MACH_LGE
@@ -5372,9 +5376,13 @@ static struct clk_lookup msm_clocks_8064[] = {
 	CLK_LOOKUP("dma_bam_pclk",	dma_bam_p_clk.c,	NULL),
 #ifdef CONFIG_MACH_LGE
 	CLK_LOOKUP("iface_clk",		gsbi1_p_clk.c,		""),
+#elif CONFIG_MACH_APQ8064_SOM
+#if CONFIG_SERIAL_MSM_HS
+	CLK_LOOKUP("iface_clk",		gsbi1_p_clk.c,	"msm_serial_hs.0"),
 #else
 	CLK_LOOKUP("iface_clk",		gsbi1_p_clk.c,	"msm_serial_hsl.1"),
 #endif
+#endif
 	CLK_LOOKUP("iface_clk",		gsbi1_p_clk.c,	"qup_i2c.0"),
 	CLK_LOOKUP("iface_clk",		gsbi2_p_clk.c,		""),
 	CLK_LOOKUP("iface_clk",		gsbi3_p_clk.c,		"qup_i2c.3"),
diff --git a/arch/arm/mach-msm/devices-8064.c b/arch/arm/mach-msm/devices-8064.c
index bb42c79..58482d9 100644
--- a/arch/arm/mach-msm/devices-8064.c
+++ b/arch/arm/mach-msm/devices-8064.c
@@ -216,6 +216,52 @@ struct platform_device apq8064_device_uart_gsbi1 = {
 	.resource	= resources_uart_gsbi1,
 };
 
+#ifdef CONFIG_MACH_APQ8064_SOM
+/* GSBI 1 used into UARTDM Mode for 8064 SOM */
+static struct resource msm_uart_dm1_resources[] = {
+	{
+		.start  = MSM_UART1DM_PHYS,
+		.end    = MSM_UART1DM_PHYS + PAGE_SIZE - 1,
+		.name   = "uartdm_resource",
+		.flags  = IORESOURCE_MEM,
+	},
+	{
+		.start  = APQ8064_GSBI1_UARTDM_IRQ,
+		.end    = APQ8064_GSBI1_UARTDM_IRQ,
+		.flags  = IORESOURCE_IRQ,
+	},
+	{
+		.start  = MSM_GSBI1_PHYS,
+		.end    = MSM_GSBI1_PHYS + 4 - 1,
+		.name   = "gsbi_resource",
+		.flags  = IORESOURCE_MEM,
+	},
+	{   /* TBD: Which DMA channel to use? */
+		.start  = DMOV_APQ8064_SOM_HSUART_GSBI1_TX_CHAN,
+		.end    = DMOV_APQ8064_SOM_HSUART_GSBI1_RX_CHAN,
+		.name   = "uartdm_channels",
+		.flags  = IORESOURCE_DMA,
+	},
+	{
+		.start  = DMOV_APQ8064_SOM_HSUART_GSBI1_TX_CRCI,
+		.end    = DMOV_APQ8064_SOM_HSUART_GSBI1_RX_CRCI,
+		.name   = "uartdm_crci",
+		.flags  = IORESOURCE_DMA,
+	},
+};
+static u64 msm_uart_dm1_dma_mask = DMA_BIT_MASK(32);
+struct platform_device apq8064_device_uartdm_gsbi1 = {
+	.name   = "msm_serial_hs",
+	.id     = 0,
+	.num_resources  = ARRAY_SIZE(msm_uart_dm1_resources),
+	.resource       = msm_uart_dm1_resources,
+	.dev    = {
+		.dma_mask		= &msm_uart_dm1_dma_mask,
+		.coherent_dma_mask	= DMA_BIT_MASK(32),
+	},
+};
+#endif
+
 static struct resource resources_uart_gsbi3[] = {
 	{
 		.start	= GSBI3_UARTDM_IRQ,
@@ -546,7 +592,7 @@ struct platform_device mpq8064_device_uartdm_gsbi6 = {
 	},
 };
 
-/* SOM: UAR-2wire serial port on GSBI6 */
+/* SOM: UART-2wire serial port on GSBI6 */
 static struct resource resources_uart_gsbi6[] = {
 	{
 		.start	= GSBI6_UARTDM_IRQ,
diff --git a/arch/arm/mach-msm/devices.h b/arch/arm/mach-msm/devices.h
index 839100c..98b338c 100644
--- a/arch/arm/mach-msm/devices.h
+++ b/arch/arm/mach-msm/devices.h
@@ -87,6 +87,7 @@ extern struct platform_device msm8960_device_ebi1_ch0_erp;
 extern struct platform_device msm8960_device_ebi1_ch1_erp;
 
 extern struct platform_device apq8064_device_uart_gsbi1;
+extern struct platform_device apq8064_device_uartdm_gsbi1;
 extern struct platform_device apq8064_device_uart_gsbi3;
 extern struct platform_device apq8064_device_uart_gsbi4;
 extern struct platform_device apq8064_device_uartdm_gsbi4;
diff --git a/arch/arm/mach-msm/include/mach/dma.h b/arch/arm/mach-msm/include/mach/dma.h
index 361dce2..25a7994 100644
--- a/arch/arm/mach-msm/include/mach/dma.h
+++ b/arch/arm/mach-msm/include/mach/dma.h
@@ -272,6 +272,13 @@ int msm_dmov_exec_cmd(unsigned id, unsigned int cmdptr);
 #define DMOV8064_TSIF_CHAN         2
 #define DMOV8064_TSIF_CRCI         1
 
+/* channels for APQ8064 SOM*/
+#define DMOV_APQ8064_SOM_HSUART_GSBI1_TX_CHAN	11
+#define DMOV_APQ8064_SOM_HSUART_GSBI1_TX_CRCI	13
+
+#define DMOV_APQ8064_SOM_HSUART_GSBI1_RX_CHAN	10
+#define DMOV_APQ8064_SOM_HSUART_GSBI1_RX_CRCI	12
+
 /* channels for APQ8064 SGLTE*/
 #define DMOV_APQ8064_HSUART_GSBI4_TX_CHAN	11
 #define DMOV_APQ8064_HSUART_GSBI4_TX_CRCI	8
-- 
1.8.2.1

