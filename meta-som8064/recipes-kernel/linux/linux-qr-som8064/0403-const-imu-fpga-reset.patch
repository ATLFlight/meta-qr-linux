diff --git a/arch/arm/mach-msm/board-8064-pmic.c b/arch/arm/mach-msm/board-8064-pmic.c
index f66341c..16370d1 100644
--- a/arch/arm/mach-msm/board-8064-pmic.c
+++ b/arch/arm/mach-msm/board-8064-pmic.c
@@ -122,7 +122,7 @@ static struct pm8xxx_gpio_init pm8921_gpios[] __initdata = {
 	PM8921_GPIO_OUTPUT(18, 0, HIGH),              /* BALL_GPIO_23 */
 	PM8921_GPIO_OUTPUT(19, 0, HIGH),              /* BALL_GPIO_24 */
 #endif
-	PM8921_GPIO_OUTPUT(1, 1, MED),
+	PM8921_GPIO_OUTPUT(1, 1, HIGH),
 	PM8921_GPIO_OUTPUT(2, 1, MED),
 	PM8921_GPIO_OUTPUT(3, 0, MED),
 	PM8921_GPIO_OUTPUT(4, 0, MED),
diff --git a/arch/arm/mach-msm/board-8064.c b/arch/arm/mach-msm/board-8064.c
index d319267..f1a0c180 100644
--- a/arch/arm/mach-msm/board-8064.c
+++ b/arch/arm/mach-msm/board-8064.c
@@ -3539,6 +3539,33 @@ static void __init apq8064_cdp_init(void)
 		platform_device_register(&mpq_gpio_keys_pdev);
 		platform_device_register(&mpq_keypad_device);
 	}
+
+   if(machine_is_apq8064_som()) {
+       int ret = 0;
+       int gpio_line = 86;
+       pr_info("bringing fpga out of reset\n");
+       ret = gpio_request(gpio_line, "fpga_reset_n");
+       if (ret)
+           pr_err("%s: Failed to request gpio fpga_reset_n %d\n", __func__, gpio_line);
+       else
+           gpio_direction_output(gpio_line, 1);
+
+	   gpio_line = PM8921_GPIO_PM_TO_SYS(1);
+       pr_info("imu first pmic_gpio %d\n", gpio_line);
+       ret = gpio_request(gpio_line, "pm_gpio_1");
+       if (ret)
+           pr_err("%s: Failed to request gpio pm_gpio %d\n", __func__, gpio_line);
+       else
+           gpio_direction_output(gpio_line, 0);
+
+	   gpio_line = PM8921_GPIO_PM_TO_SYS(2);
+       pr_info("imu first pmic_gpio %d\n", gpio_line);
+       ret = gpio_request(gpio_line, "pm_gpio_2");
+       if (ret)
+           pr_err("%s: Failed to request gpio pm_gpio %d\n", __func__, gpio_line);
+       else
+           gpio_direction_output(gpio_line, 0);
+   }
 }
 
 MACHINE_START(APQ8064_CDP, "QCT APQ8064 CDP")
