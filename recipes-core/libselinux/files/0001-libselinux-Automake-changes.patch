From 3f522e450c675e8cb0bdfbd53f73eca5f6927151 Mon Sep 17 00:00:00 2001
From: Gustavo Solaira <gustavos@codeaurora.org>
Date: Mon, 10 Aug 2015 14:46:06 -0700
Subject: [PATCH] libselinux: Automake changes

---
 Makefile.am      | 66 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac     | 51 +++++++++++++++++++++++++++++++++++++++++++
 libselinux.pc.in | 10 +++++++++
 src/procattr.c   |  4 ++--
 4 files changed, 129 insertions(+), 2 deletions(-)
 create mode 100644 Makefile.am
 create mode 100644 configure.ac
 create mode 100644 libselinux.pc.in

diff --git a/Makefile.am b/Makefile.am
new file mode 100644
index 0000000..cf0e58b
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,66 @@
+AM_CFLAGS = -Wundef \
+        -Wstrict-prototypes \
+        -Wno-trigraphs \
+        -g -O0 \
+        -fno-inline \
+        -fno-short-enums \
+        -fpic \
+        -I${top_srcdir}/include
+
+AM_CPPFLAGS = $(AM_CFLAGS)
+
+ACLOCAL_AMFLAGS = -I m4
+
+### Build libselinux library
+
+libselinux_h_sources = include/selinux/selinux.h include/selinux/label.h include/selinux/context.h include/selinux/avc.h include/selinux/android.h
+
+libselinux_c_sources := \
+	src/booleans.c \
+	src/canonicalize_context.c \
+	src/disable.c \
+	src/enabled.c \
+	src/fgetfilecon.c \
+	src/fsetfilecon.c \
+	src/getenforce.c \
+	src/getfilecon.c \
+	src/getpeercon.c \
+	src/lgetfilecon.c \
+	src/load_policy.c \
+	src/lsetfilecon.c \
+	src/policyvers.c \
+	src/procattr.c \
+	src/setenforce.c \
+	src/setfilecon.c \
+	src/context.c \
+	src/mapping.c \
+	src/stringrep.c \
+	src/compute_create.c \
+	src/compute_av.c \
+	src/avc.c \
+	src/avc_internal.c \
+	src/avc_sidtab.c \
+	src/get_initial_context.c \
+	src/checkAccess.c \
+	src/sestatus.c \
+	src/deny_unknown.c \
+	src/callbacks.c \
+	src/check_context.c \
+	src/freecon.c \
+	src/init.c \
+	src/label.c \
+	src/label_file.c \
+	src/label_android_property.c
+
+libselinux_la_SOURCES = $(libselinux_c_sources) $(libselinux_h_sources)
+libselinux_la_LDFLAGS = $(PCRE_LIB)
+
+### Export library
+lib_LTLIBRARIES = libselinux.la
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = libselinux.pc
+EXTRA_DIST = $(pkgconfig_DATA)
+
+library_includedir = $(includedir)/selinux
+library_include_HEADERS = $(libselinux_h_sources)
diff --git a/configure.ac b/configure.ac
new file mode 100644
index 0000000..389b56e
--- /dev/null
+++ b/configure.ac
@@ -0,0 +1,51 @@
+  AC_PREREQ(2.61)
+
+  AC_INIT([libselinux],1.0.0)
+
+  AM_INIT_AUTOMAKE([foreign])
+
+  AM_MAINTAINER_MODE
+
+  AC_CONFIG_HEADER([config.h])
+  AC_CONFIG_MACRO_DIR([m4])
+
+  # Checks for programs.
+  AM_PROG_AS
+  AC_PROG_CC
+  AM_PROG_CC_C_O
+  AC_PROG_LIBTOOL
+  AC_PROG_AWK
+  AC_PROG_CPP
+  AC_PROG_CXX
+  AC_PROG_INSTALL
+  AC_PROG_LN_S
+  AC_PROG_MAKE_SET
+
+  #
+  # Build all components by default
+  #
+  # To add new components: add AC_ARG_ENABLE, AM_CONDITIONAL and update AC_OUTPUT
+  #
+
+AC_MSG_CHECKING(for perl regular expressions support)
+AC_ARG_WITH(pcre, AC_HELP_STRING([--with-pcre],[Enable pcre support (default yes)]),
+    [WITH_PCRE=$withval],[WITH_PCRE=yes])
+AC_MSG_RESULT([$WITH_PCRE])
+
+if test "$WITH_PCRE" != "no"; then
+  PKG_CHECK_MODULES(PCREPKG, [libpcre], [
+    PCRE_LIB=${PCREPKG_LIBS}
+    CPPFLAGS="$CPPFLAGS ${PCREPKG_CFLAGS}"
+    AC_DEFINE([HAVE_LIBPCRE], [1], [libpcre])
+    AC_DEFINE([HAVE_PCRE_H], [1], [pcre.h])
+  ], [
+     AC_MSG_ERROR([pcre-config not found, install the pcre-devel package or build with --without-pcre])
+  ])
+fi
+
+AC_SUBST(PCRE_LIB)
+
+  AC_OUTPUT([ \
+          Makefile \
+          libselinux.pc
+  ])
diff --git a/libselinux.pc.in b/libselinux.pc.in
new file mode 100644
index 0000000..7acf5d8
--- /dev/null
+++ b/libselinux.pc.in
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: selinux library
+Description: libselinux library
+Version: @VERSION@
+Libs: -L${libdir} -lselinux
+Cflags: -I${includedir}/libselinux
diff --git a/src/procattr.c b/src/procattr.c
index 6c2c5a8..b5e42ff 100644
--- a/src/procattr.c
+++ b/src/procattr.c
@@ -8,12 +8,12 @@
 #include "selinux_internal.h"
 #include "policy.h"
 
-#ifdef HOST
+//#ifdef HOST
 static pid_t gettid(void)
 {
 	return syscall(__NR_gettid);
 }
-#endif
+//#endif
 
 static int getprocattrcon(security_context_t * context,
 			  pid_t pid, const char *attr)
-- 
2.4.2

